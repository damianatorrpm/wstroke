diff --git a/src/api/wayfire/core.hpp b/src/api/wayfire/core.hpp
index b37334d..a65f5de 100644
--- a/src/api/wayfire/core.hpp
+++ b/src/api/wayfire/core.hpp
@@ -7,6 +7,7 @@
 #include <sys/types.h>
 #include <limits>
 #include <vector>
+#include <wlr/types/wlr_input_device.h>
 #include <wayfire/nonstd/observer_ptr.h>
 #include <wayfire/config/config-manager.hpp>
 
@@ -286,6 +287,12 @@ class compositor_core_t : public wf::object_base_t
      * Returns a reference to the only core instance.
      */
     static compositor_core_t& get();
+    
+    /**
+     * Fake a mouse button press event
+     */
+    virtual void fake_mouse_button(uint32_t time_msec,
+        uint32_t button, enum wlr_button_state state) = 0;
 
   protected:
     compositor_core_t();
diff --git a/src/core/core-impl.hpp b/src/core/core-impl.hpp
index f740956..29c906e 100644
--- a/src/core/core-impl.hpp
+++ b/src/core/core-impl.hpp
@@ -84,6 +84,9 @@ class compositor_core_impl_t : public compositor_core_t
     std::string get_xwayland_display() override;
     pid_t run(std::string command) override;
     void shutdown() override;
+    
+    void fake_mouse_button(uint32_t time_msec,
+        uint32_t button, enum wlr_button_state state) override;
 
   private:
     wf::wl_listener_wrapper decoration_created;
diff --git a/src/core/core.cpp b/src/core/core.cpp
index a3e6f7b..89f9d0f 100644
--- a/src/core/core.cpp
+++ b/src/core/core.cpp
@@ -823,3 +823,17 @@ wf::compositor_core_impl_t& wf::get_core_impl()
 {
     return wf::compositor_core_impl_t::get();
 }
+
+void wf::compositor_core_impl_t::fake_mouse_button(uint32_t time_msec,
+        uint32_t button, enum wlr_button_state state) {
+    wlr_event_pointer_button ev;
+    ev.device = nullptr; /* TODO: set this to something sensible! (apparently not used currently) */
+    ev.button = button;
+    ev.state = state;
+    ev.time_msec = time_msec;
+    bool focus_enabled = (input->lpointer->get_focus() != nullptr);
+    if(!focus_enabled) input->lpointer->set_enable_focus(true);
+    input->lpointer->handle_pointer_button(&ev);
+    if(!focus_enabled) input->lpointer->set_enable_focus(false);
+}
+
